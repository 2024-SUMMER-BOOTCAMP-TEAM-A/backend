version: '3.8'

services:
  db:
    image: mysql:latest
    container_name: db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    # 한글 설정
    command: 
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_general_ci
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    hostname: redis

  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - app-network

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network
    volumes:
      - mongodb:/data/db
    command: ["mongod", "--auth"]
    hostname: mongo

  mongo_express:
    image: mongo-express:latest
    container_name: mongo_insight
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    networks:
      - app-network
    hostname: mongo-express

  # ELK
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - npage
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - SERVER_NAME=kibana
    ports:
      - "5601:5601"
    volumes:
      - ./elk/kibana/config:/usr/share/kibana/config
    networks:
      - npage
    depends_on:
      - elasticsearch
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.2
    container_name: logstash
    volumes:
      - ./elk/logstash/config:/usr/share/logstash/config
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      - npage
    depends_on:
      - elasticsearch
    restart: unless-stopped

  # node:
  #   container_name: node
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
  #     - REDIS_URL=redis://redis:6379
  #     - MYSQL_HOST=db
  #     - MYSQL_DATABASE=${MYSQL_DATABASE}
  #     - MYSQL_USER=${MYSQL_USER}
  #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  #     - GOOGLE_APPLICATION_CREDENTIALS=credentials.json 
  #     - GOOGLE_CLOUD_PROJECT=rare-bloom-416113 
  #     - GCLOUD_STORAGE_BUCKET=logs_image
  #   ports:
  #     - '8000:8000'
  #   depends_on:
  #     - db
  #     - redis
  #     - mongo
  #   networks:
  #     - app-network

  

networks:
  app-network:
    driver: bridge
  npage:
    driver: bridge

volumes:
  db_data:
  mongodb:
  elasticsearch-data: