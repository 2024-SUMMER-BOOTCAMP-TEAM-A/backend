version: '3.8'

services:
  db:
    image: mysql:latest
    container_name: db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    hostname: redis

  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb:/data/db
    networks:
      - app-network
    hostname: mongodb

  mongodb_insight:
    image: mongo-express:latest
    container_name: mongo_insight
    depends_on:
      - mongodb
    ports:
      - "8888:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network
    hostname: mongo-express

  # node:
  #   container_name: node
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
  #     - REDIS_URL=redis://redis:6379
  #     - MYSQL_HOST=db
  #     - MYSQL_DATABASE=${MYSQL_DATABASE}
  #     - MYSQL_USER=${MYSQL_USER}
  #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  #   ports:
  #     - '8000:8000'
  #   depends_on:
  #     - db
  #     - redis
  #     - mongodb
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  mongodb:
